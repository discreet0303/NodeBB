name: Test and build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    name: Lint and test

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node: [12, 14]
        database: [mongo-dev, mongo, redis, postgres]
        include:
          # only run coverage once
          - os: ubuntu-latest
            node: 14
            coverage: true
          # test under development once
          - database: mongo-dev
            test_env: development
          # only run eslint once
          - os: ubuntu-latest
            node: 14
            database: mongo-dev
            lint: true
    env:
      TEST_ENV: ${{ matrix.test_env || 'production' }}

    services:
      mongo:
        image: 'mongo:3.2'
        ports:
          # Maps port 27017 on service container to the host
          - 27017:27017

    steps:
      - uses: actions/checkout@v2

      - run: cp install/package.json package.json

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: '12.x'

      - name: NPM Install
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: Setup on MongoDB
        env:
          SETUP: >-
            {
              "url": "http://127.0.0.1:4567",
              "secret": "abcdef",
              "admin:username": "admin",
              "admin:email": "test@example.org",
              "admin:password": "hAN3Eg8W",
              "admin:password:confirm": "hAN3Eg8W",

              "database": "mongo",
              "mongo:host": "127.0.0.1",
              "mongo:port": 27017,
              "mongo:username": "",
              "mongo:password": "",
              "mongo:database": "nodebb"
            }
          CI: >-
            {
              "host": "127.0.0.1",
              "port": 27017,
              "database": "ci_test"
            }
        run: |
          node app --setup="${SETUP}" --ci="${CI}"

  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
